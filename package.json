{
  "name": "systemagro",
  "version": "1.0.0",
  "description": "Sistema Agropecuário completo com Dashboard BI, gestão de fazendas, cultivos, vendas e estoque",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm start",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "docker:logs": "docker-compose logs -f",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "security:check": "node scripts/security-check.js",
    "security:full-check": "npm run security:check && npm run security:audit && npm run security:lint",
    "security:audit": "cd backend && npm audit --audit-level=moderate && cd ../frontend && npm audit --audit-level=moderate",
    "security:lint": "cd backend && npm run lint:security && cd ../frontend && npm run lint",
    "security:vuln-scan": "cd backend && npm audit --audit-level=low --json > ../security-audit.json",
    "security:report": "node scripts/security-check.js && echo 'Relatório de segurança gerado em security-report.json'",
    "security:dashboard": "echo 'Acesse http://localhost:3000/api/security/dashboard para métricas'",
    "deploy:azure": "node scripts/azure-deploy.js",
    "deploy:azure:secure": "npm run security:full-check && npm run deploy:azure",
    "azure:test": "az account show && echo 'Conexão Azure OK'",
    "logs:tail": "cd backend && tail -f logs/*.log",
    "logs:export": "cd backend && tar -czf logs-export-$(date +%Y%m%d).tar.gz logs/",
    "system:health": "node -e \"console.log('Node:', process.version); console.log('Platform:', process.platform); console.log('Memory:', Math.round(process.memoryUsage().heapUsed / 1024 / 1024) + 'MB');\"",
    "config:validate": "node -e \"const fs=require('fs'); if(!fs.existsSync('.env.example')) throw new Error('.env.example não encontrado'); console.log('Configurações validadas');\"",
    "compliance:report": "node scripts/security-check.js && echo 'Relatório de compliance disponível'",
    "monitor:realtime": "echo 'Monitoramento em tempo real - verifique logs e métricas'",
    "auth:reset-tokens": "echo 'ATENÇÃO: Regenerar JWT_SECRET e JWT_REFRESH_SECRET no .env'",
    "perf:test": "cd backend && node -e \"const start = Date.now(); setTimeout(() => console.log('Response time test:', Date.now() - start, 'ms'), 100);\"",
    "install:security": "cd backend && npm install helmet express-rate-limit cors express-validator bcrypt jsonwebtoken speakeasy qrcode winston @azure/keyvault-secrets @azure/identity",
    "setup:env": "cp .env.example .env && echo 'Configure as variáveis no arquivo .env'"
  },
  "keywords": [
    "agropecuaria",
    "agricultura",
    "dashboard",
    "bi",
    "react",
    "nodejs",
    "postgresql",
    "docker"
  ],
  "author": "Sistema Agro",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "dependencies": {
    "axios": "^1.10.0"
  }
}
